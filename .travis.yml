language: node_js
node_js:
  - "lts/*"

sudo: required

services:
  - docker

addons:
  apt:
    - jq
    - fakeroot
    - dpkg
    - libavahi-compat-libdnssd-dev

jobs:
  include:
    - stage: test
      script:
        - npm test
    - stage: build and push amd64 and arm32v7 images
      script:
        - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
        - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
        - docker build -f Dockerfile -t signalk/signalk-server:linux-amd64-"$BRANCH" .
        - docker push signalk/signalk-server:linux-amd64-"$BRANCH"
    - script:
        - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
        - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
        - docker run --rm --privileged multiarch/qemu-user-static:register --reset
        - mkdir tmp
        - >
          pushd tmp &&
          curl -L -o qemu-arm-static.tar.gz https://github.com/multiarch/qemu-user-static/releases/download/v2.11.0/qemu-arm-static.tar.gz &&
          tar xzf qemu-arm-static.tar.gz &&
          popd
        - docker build -f Dockerfile_arm32v7 -t signalk/signalk-server:linux-arm32v7-"$BRANCH" .
        - docker push signalk/signalk-server:linux-arm32v7-"$BRANCH"
    - stage: build and push multi-arch manifest
      script:
        - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
        - ./make-manifest.sh
        - docker run --rm -v `pwd`:`pwd` -w `pwd` tkurki/manifest-tool --username="$DOCKER_USER" --password="$DOCKER_PASS" push from-spec docker-manifest.yml


    - stage: build-deb-branch
      before_install:
        - npm install -g node-deb
      script:
        - "PACKAGE_VERSION=$(echo \"const data = require('./package.json'); console.log(data.version)\" | node)"
        - node-deb --verbose -n "signalk-server-${TRAVIS_BRANCH}" -v "${PACKAGE_VERSION}-snapshot-${TRAVIS_BUILD_NUMBER}" -- index.js `find . -maxdepth 1 -type d | grep -v .git | grep -v node_modules | egrep -v '^\.$'`
	- if [ $TRAVIS_TAG =~ ^v[0-9] ] ; then
	      node-deb --verbose -n "signalk-server"                  -v "${PACKAGE_VERSION}"                                 -- index.js `find . -maxdepth 1 -type d | grep -v .git | grep -v node_modules | egrep -v '^\.$'`
	  fi
      script: ls -lh *.deb ; dpkg-deb --info *.deb
#      deploy:
#        - provider: packagecloud
#          repository: signalk-server
#          username: SignalK 
#          token:
#            secure:  "bKa9NU3sPNHxISTrYOuAOfJgZLuKXpywnHFjkOIvcrk1hu5NFqTcVGj7IGtOO93GU2rNmZqWl9WLSICYQZMZ7tL9Lfnj2AH3bU7JT9C8vbMtIc31FajKbPK81lhCDzSa5G3Y0SkyqwCGWdPfSHXeGR5sbQoWsSoTOhMOXP80hqc="
#          dist: debian/stretch
#          skip_cleanup: true
#          package_glob: signalk-server*.deb
#          on:
#            all_branches: true
#        - provider: packagecloud
#          repository: signalk-server
#          username: SignalK
#          token:
#            secure:  "bKa9NU3sPNHxISTrYOuAOfJgZLuKXpywnHFjkOIvcrk1hu5NFqTcVGj7IGtOO93GU2rNmZqWl9WLSICYQZMZ7tL9Lfnj2AH3bU7JT9C8vbMtIc31FajKbPK81lhCDzSa5G3Y0SkyqwCGWdPfSHXeGR5sbQoWsSoTOhMOXP80hqc="
#          dist: raspbian/stretch
#          skip_cleanup: true
#          package_glob: signalk-server*.deb
#          on:
#            all_branches: true
